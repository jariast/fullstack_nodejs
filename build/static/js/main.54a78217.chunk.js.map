{"version":3,"sources":["components/PersonDetails.js","components/Input.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonDetails","person","clickHandler","className","name","number","onClick","Input","label","inputValue","onChangeHandler","required","value","onChange","Filter","Notification","notification","notificationClass","isError","message","baseUrl","axios","get","then","response","console","log","data","newPersonObject","post","id","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setNotification","filteredPersons","setFilteredPersons","useEffect","personsService","createPerson","newPerson","newPersonsObj","concat","showNotification","resetAppState","updatePerson","find","changedPerson","modifiedPerson","newPersonsState","map","p","catch","error","setTimeout","onSubmit","event","preventDefault","some","window","confirm","target","type","filterString","filter","toLowerCase","includes","key","handlePersonDeleteClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54a78217.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PersonDetails = ({ person, clickHandler }) => (\r\n  <div className=\"personDetails\">\r\n    <p>{`${person.name} /// ${person.number}`}</p>\r\n    <button onClick={clickHandler}>Delete Person</button>\r\n  </div>\r\n);\r\n\r\nexport default PersonDetails;\r\n","import React from 'react';\r\n\r\nconst Input = ({ label, inputValue, onChangeHandler }) => (\r\n  <label>\r\n    {label}\r\n    <input required value={inputValue} onChange={onChangeHandler} />\r\n  </label>\r\n);\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ label, inputValue, onChangeHandler }) => (\r\n  <label>\r\n    {label}\r\n    <input value={inputValue} onChange={onChangeHandler} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ notification }) => {\r\n  const notificationClass = notification.isError ? 'error' : 'success';\r\n  if (!notification.message) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={notificationClass}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAllPersons = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => {\r\n    console.log('Response after getAll: ', response);\r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst createPerson = (newPersonObject) => {\r\n  const request = axios.post(baseUrl, newPersonObject);\r\n  return request.then((response) => {\r\n    console.log('Response after create: ', response);\r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst updatePerson = (id, newPersonObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPersonObject);\r\n  return request.then((response) => {\r\n    console.log('Response after update: ', response);\r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => {\r\n    console.log('Response after delete: ', response);\r\n    return response.data;\r\n  });\r\n};\r\n\r\nexport default { getAllPersons, createPerson, updatePerson, deletePerson };\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport PersonDetails from './components/PersonDetails';\r\nimport Input from './components/Input';\r\nimport Filter from './components/Filter';\r\nimport Notification from './components/Notification';\r\nimport personsService from './services/persons';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [newFilter, setNewFilter] = useState('');\r\n  const [notification, setNotification] = useState({});\r\n  const [filteredPersons, setFilteredPersons] = useState(persons);\r\n\r\n  const hook = () => {\r\n    personsService.getAllPersons().then((persons) => {\r\n      setPersons(persons);\r\n      setFilteredPersons(persons);\r\n    });\r\n  };\r\n\r\n  useEffect(hook, []);\r\n\r\n  const handleNewNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNewNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleNewFilterChange = (event) => {\r\n    const filterString = event.target.value;\r\n    setNewFilter(filterString);\r\n    setFilteredPersons(\r\n      persons.filter((person) =>\r\n        person.name.toLowerCase().includes(filterString)\r\n      )\r\n    );\r\n  };\r\n\r\n  const handlePersonDeleteClick = (person) => {\r\n    console.log('Deleting person :', person);\r\n    if (window.confirm(`Do you really want to delete \"${person.name}\" info?`)) {\r\n      personsService\r\n        .deletePerson(person.id)\r\n        .then(() => {\r\n          const newPersonsState = persons.filter((p) => p.id !== person.id);\r\n          setPersons(newPersonsState);\r\n          setFilteredPersons(newPersonsState);\r\n          showNotification(false, `\"${person.name}\" has been deleted`);\r\n        })\r\n        .catch((error) => {\r\n          showNotification(\r\n            true,\r\n            `${person.name} no longer exists in the server.`\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const isDuplicateEntry = persons.some((person) => person.name === newName);\r\n    if (isDuplicateEntry) {\r\n      const shouldUpdateEntry = window.confirm(\r\n        `\"${newName}\" already exists, do you want to update the phone number?`\r\n      );\r\n      if (shouldUpdateEntry) {\r\n        updatePerson(newName);\r\n      }\r\n    } else {\r\n      createPerson();\r\n    }\r\n  };\r\n\r\n  const createPerson = () => {\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    personsService.createPerson(newPerson).then((newPerson) => {\r\n      const newPersonsObj = persons.concat(newPerson);\r\n      showNotification(false, `\"${newPerson.name}\" has been created`);\r\n      resetAppState(newPersonsObj);\r\n    });\r\n  };\r\n\r\n  const updatePerson = (newName) => {\r\n    const person = persons.find((person) => person.name === newName);\r\n    const changedPerson = { ...person, number: newNumber };\r\n\r\n    personsService\r\n      .updatePerson(person.id, changedPerson)\r\n      .then((modifiedPerson) => {\r\n        const newPersonsState = persons.map((p) =>\r\n          p.id !== person.id ? p : modifiedPerson\r\n        );\r\n        showNotification(\r\n          false,\r\n          `\"${modifiedPerson.name}\" number has been updated.`\r\n        );\r\n        resetAppState(newPersonsState);\r\n      })\r\n      .catch((error) => {\r\n        showNotification(\r\n          true,\r\n          `${person.name} no longer exists in the server.`\r\n        );\r\n      });\r\n  };\r\n\r\n  const resetAppState = (newPersonsState) => {\r\n    setPersons(newPersonsState);\r\n    setFilteredPersons(newPersonsState);\r\n    setNewName('');\r\n    setNewNumber('');\r\n    setNewFilter('');\r\n  };\r\n\r\n  const showNotification = (isError, message) => {\r\n    setNotification({ isError, message });\r\n    setTimeout(() => {\r\n      setNotification({});\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div>\r\n          <Input\r\n            label=\"name\"\r\n            inputValue={newName}\r\n            onChangeHandler={handleNewNameChange}\r\n          />\r\n          <Input\r\n            label=\"number\"\r\n            inputValue={newNumber}\r\n            onChangeHandler={handleNewNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n      <h2>Numbers</h2>\r\n      <Filter\r\n        label=\"Filter\"\r\n        inputValue={newFilter}\r\n        onChangeHandler={handleNewFilterChange}\r\n      />\r\n      {filteredPersons.map((person) => (\r\n        <PersonDetails\r\n          key={person.id}\r\n          person={person}\r\n          clickHandler={() => handlePersonDeleteClick(person)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}